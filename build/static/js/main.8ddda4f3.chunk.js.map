{"version":3,"sources":["context/api.context.tsx","context/modal.context.tsx","components/footer/index.tsx","components/header/index.tsx","components/card/index.tsx","components/loading/index.tsx","components/main/index.tsx","components/modal/index.tsx","components/search/index.tsx","views/home/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ApiContext","createContext","ApiProvider","props","useState","loading","setLoading","data","setData","a","axios","get","useEffect","getData","value","useMemo","Provider","children","ModalContext","ModalProvider","isModal","setIsModal","isAbbr","setIsAbbr","Footer","className","href","rel","target","Header","Card","useContext","onClick","abbreviation","location","total_cases","total_deaths","total_vaccinations","Loading","Main","cards","setCards","covid","ArrayAux","Object","entries","map","index","initials","infos","slice","toLocaleString","push","handlerCards","values","card","Modal","setAbbreviation","continent","setContinent","setLocation","population","setPopulation","population_density","setPopulation_density","people_vaccinated","setPeople_vaccinated","people_fully_vaccinated","setPeople_fully_vaccinated","total_boosters","setTotal_boosters","new_vaccinations","setNew_vaccinations","setTotal_vaccinations","total_tests","setTotal_tests","new_tests","setNew_tests","reproduction_rate","setReproduction_rate","icu_patients","setIcu_patients","setTotal_deaths","new_deaths","setNew_deaths","setTotal_cases","new_cases","setNew_cases","htmlFor","id","Search","search","setSearch","document","querySelectorAll","length","title","querySelector","textContent","express","RegExp","test","classList","remove","add","type","onChange","e","placeholder","Home","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8ddda4f3.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { createContext, useEffect, useMemo, useState } from 'react';\r\n\r\ninterface ApiProviderProps {\r\n    children: JSX.Element[] | JSX.Element;\r\n}\r\n\r\ninterface ApiContextProps {\r\n    loading: boolean;\r\n    data: object;\r\n}\r\n\r\nconst ApiContext = createContext({} as ApiContextProps);\r\n\r\nconst ApiProvider = (props: ApiProviderProps) => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [data, setData] = useState({});\r\n\r\n    async function getData() {\r\n        const { data } = await axios.get(\r\n            'https://covid.ourworldindata.org/data/owid-covid-data.json'\r\n        );\r\n        setData(data);\r\n        setLoading(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, [loading]);\r\n\r\n    const value = useMemo(() => ({ loading, data }), [loading, data]);\r\n\r\n    return (\r\n        <ApiContext.Provider value={value}>\r\n            {props.children}\r\n        </ApiContext.Provider>\r\n    );\r\n};\r\n\r\nexport { ApiContext, ApiProvider };\r\n","import {\r\n    createContext,\r\n    Dispatch,\r\n    SetStateAction,\r\n    useMemo,\r\n    useState,\r\n} from 'react';\r\n\r\ninterface ModalProviderProps {\r\n    children: JSX.Element[] | JSX.Element;\r\n}\r\n\r\ninterface ModalContextProps {\r\n    isModal: boolean;\r\n    setIsModal: Dispatch<SetStateAction<boolean>>;\r\n    isAbbr: string;\r\n    setIsAbbr: Dispatch<SetStateAction<string>>;\r\n}\r\n\r\nconst ModalContext = createContext({} as ModalContextProps);\r\n\r\nconst ModalProvider = (props: ModalProviderProps) => {\r\n    const [isModal, setIsModal] = useState(false);\r\n    const [isAbbr, setIsAbbr] = useState('');\r\n\r\n    const value = useMemo(\r\n        () => ({ isModal, setIsModal, isAbbr, setIsAbbr }),\r\n        [isModal, setIsModal, isAbbr, setIsAbbr]\r\n    );\r\n\r\n    return (\r\n        <ModalContext.Provider value={value}>\r\n            {props.children}\r\n        </ModalContext.Provider>\r\n    );\r\n};\r\n\r\nexport { ModalContext, ModalProvider };\r\n","import './index.css'\r\nconst Footer = () => {\r\n    return (\r\n        <footer className='footer'>\r\n            <p>\r\n                Fonte:{' '}\r\n                <a\r\n                    href='https://github.com/owid/covid-19-data'\r\n                    rel='noreferrer'\r\n                    className='link-footer'\r\n                    target=\"_blank\"\r\n                >\r\n                    OWID\r\n                </a>\r\n            </p>\r\n            <p>\r\n                Developer by:{' '}\r\n                <a\r\n                    href='https://edinelsonlima.netlify.app'\r\n                    rel='noreferrer'\r\n                    className='link-footer'\r\n                    target=\"_blank\"\r\n                >\r\n                    @edinelsonslima\r\n                </a>\r\n            </p>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport { Footer };\r\n","import './index.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className='header'>\r\n            <h1 className='logo-app'>Covid App</h1>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport { Header };\r\n","import { useContext } from 'react';\r\nimport { ModalContext } from '../../context/modal.context';\r\nimport './index.css';\r\n\r\ninterface CardProps {\r\n    abbreviation: string;\r\n    location: string;\r\n    total_vaccinations: number;\r\n    total_deaths: number;\r\n    total_cases: number;\r\n}\r\n\r\nconst Card = (props: CardProps) => {\r\n    const { setIsModal, setIsAbbr } = useContext(ModalContext);\r\n\r\n    return (\r\n        <>\r\n           \r\n            <div\r\n                className='card-body'\r\n                onClick={() => {\r\n                    setIsAbbr(props.abbreviation)\r\n                    setIsModal(true);\r\n                }}\r\n            >\r\n                <h2 className='card-title'>{props.location}</h2>\r\n                <div className='card-infos-content'>\r\n                    <p className='card-infos'>Casos: {props.total_cases}</p>\r\n                    <p className='card-infos'>Mortes: {props.total_deaths}</p>\r\n                    <p className='card-infos'>\r\n                        Vacinados: {props.total_vaccinations}\r\n                    </p>\r\n                    <span className='abbreviation'>{props.abbreviation}</span>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport { Card };\r\n","import './index.css';\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"loading-body\">\r\n            <h1 className='loading-title'>Atualizando dados</h1>\r\n            <div className='covid-wrapper'>\r\n                <div className='viruses'>\r\n                    <div className='virus'></div>\r\n                    <div className='virus'></div>\r\n                    <div className='virus'></div>\r\n                    <div className='virus'></div>\r\n                    <div className='virus'></div>\r\n                    <div className='virus'></div>\r\n                    <div className='virus'></div>\r\n                    <div className='virus'></div>\r\n                    <div className='virus'></div>\r\n                    <div className='virus'></div>\r\n                </div>\r\n                <div className='covid-arms'></div>\r\n                <div className='covid-arms right'></div>\r\n                <div className='earth-wrapper'>\r\n                    <div className='earth-detail'></div>\r\n                    <div className='earth'>\r\n                        <div className='covid-eyes earth-eyes'></div>\r\n                        <div className='covid-eyes earth-eyes left'></div>\r\n                        <div className='mask'></div>\r\n                        <div className='mask-wrapper'></div>\r\n                        <div className='mask-detail'></div>\r\n                        <div className='mask-back'></div>\r\n                        <div className='earth-green'>\r\n                            <div className='earth-greens'></div>\r\n                            <div className='earth-greens'></div>\r\n                            <div className='earth-greens'></div>\r\n                            <div className='earth-greens'></div>\r\n                            <div className='earth-greens'></div>\r\n                            <div className='earth-greens'></div>\r\n                            <div className='earth-greens'></div>\r\n                            <div className='earth-greens'></div>\r\n                            <div className='earth-greens'></div>\r\n                            <div className='earth-greens'></div>\r\n                            <div className='earth-greens'></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='covid'>\r\n                    <div className='covid-spots'>\r\n                        <div className='covid-spot'></div>\r\n                        <div className='covid-spot'></div>\r\n                        <div className='covid-spot'></div>\r\n                        <div className='covid-spot'></div>\r\n                        <div className='covid-spot'></div>\r\n                        <div className='covid-spot'></div>\r\n                        <div className='covid-spot'></div>\r\n                        <div className='covid-spot'></div>\r\n                        <div className='covid-spot'></div>\r\n                        <div className='covid-spot'></div>\r\n                        <div className='covid-spot'></div>\r\n                    </div>\r\n                    <div className='covid-eyes'> </div>\r\n                    <div className='covid-eyes left'></div>\r\n                    <div className='covid-eyebrow'></div>\r\n                    <div className='covid-eyebrow right'></div>\r\n                    <div className='covid-mouth'></div>\r\n                    <div className='covid-cheek'></div>\r\n                    <div className='covid-cheek right'></div>\r\n                </div>\r\n            </div>\r\n            <div className='covid-pulse'>\r\n                <div className='covid-sticks'>\r\n                    <div className='covid-stick'></div>\r\n                    <div className='covid-stick'></div>\r\n                    <div className='covid-stick'></div>\r\n                    <div className='covid-stick'></div>\r\n                    <div className='covid-stick'></div>\r\n                    <div className='covid-stick'></div>\r\n                    <div className='covid-stick'></div>\r\n                    <div className='covid-stick'></div>\r\n                    <div className='covid-stick'></div>\r\n                    <div className='covid-stick'></div>\r\n                    <div className='covid-stick'></div>\r\n                    <div className='covid-stick'></div>\r\n                    <div className='covid-stick'></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { Loading };\r\n","import { Card } from '../card';\r\nimport './index.css';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport { Loading } from '../loading/index';\r\nimport { ApiContext } from '../../context/api.context';\r\n\r\nconst Main = () => {\r\n    const { loading, data } = useContext(ApiContext);\r\n    const [cards, setCards] = useState({});\r\n\r\n    useEffect(() => {\r\n        handlerCards(data);\r\n    }, [data]);\r\n\r\n    function handlerCards(covid: any) {\r\n        const ArrayAux: JSX.Element[] = [];\r\n        Object.entries(covid).map((value: [string, any], index: number) => {\r\n            const [initials, infos] = value;\r\n\r\n            const abbreviation = initials;\r\n\r\n            const location = infos.location || 'sem registro';\r\n\r\n            const total_cases = infos.data.slice(-1)[0].total_cases\r\n                ? infos.data.slice(-1)[0].total_cases.toLocaleString('pt-br')\r\n                : 'sem registro';\r\n\r\n            const total_deaths = infos.data.slice(-1)[0].total_deaths\r\n                ? infos.data.slice(-1)[0].total_deaths.toLocaleString('pt-br')\r\n                : 'sem registro';\r\n\r\n            const total_vaccinations = infos.data.slice(-1)[0]\r\n                .total_vaccinations\r\n                ? infos.data\r\n                      .slice(-1)[0]\r\n                      .total_vaccinations.toLocaleString('pt-br')\r\n                : 'sem registro';\r\n\r\n            ArrayAux.push(\r\n                <Card\r\n                    abbreviation={abbreviation}\r\n                    location={location}\r\n                    total_cases={total_cases}\r\n                    total_deaths={total_deaths}\r\n                    total_vaccinations={total_vaccinations}\r\n                    key={index}\r\n                />\r\n            );\r\n            return ArrayAux;\r\n        });\r\n        setCards(ArrayAux);\r\n    }\r\n\r\n    return (\r\n        <main className='main-app'>\r\n            {loading ? (\r\n                <Loading />\r\n            ) : (\r\n                Object.values(cards).map((card) => {\r\n                    return card;\r\n                })\r\n            )}\r\n        </main>\r\n    );\r\n};\r\n\r\nexport { Main };\r\n","import { useContext, useEffect, useState } from 'react';\r\nimport { ApiContext } from '../../context/api.context';\r\nimport { ModalContext } from '../../context/modal.context';\r\nimport './index.css';\r\n\r\ninterface ModalProps {\r\n    abbreviation: string;\r\n}\r\n\r\nconst Modal = (props: ModalProps) => {\r\n    const { setIsModal } = useContext(ModalContext);\r\n    const { data } = useContext(ApiContext);\r\n\r\n    const [abbreviation, setAbbreviation] = useState('');\r\n    const [continent, setContinent] = useState('');\r\n    const [location, setLocation] = useState('');\r\n    const [population, setPopulation] = useState('');\r\n    const [population_density, setPopulation_density] = useState('');\r\n    const [people_vaccinated, setPeople_vaccinated] = useState('');\r\n    const [people_fully_vaccinated, setPeople_fully_vaccinated] = useState('');\r\n    const [total_boosters, setTotal_boosters] = useState('');\r\n    const [new_vaccinations, setNew_vaccinations] = useState('');\r\n    const [total_vaccinations, setTotal_vaccinations] = useState('');\r\n    const [total_tests, setTotal_tests] = useState('');\r\n    const [new_tests, setNew_tests] = useState('');\r\n    const [reproduction_rate, setReproduction_rate] = useState('');\r\n    const [icu_patients, setIcu_patients] = useState('');\r\n    const [total_deaths, setTotal_deaths] = useState('');\r\n    const [new_deaths, setNew_deaths] = useState('');\r\n    const [total_cases, setTotal_cases] = useState('');\r\n    const [new_cases, setNew_cases] = useState('');\r\n\r\n    useEffect(() => {\r\n        Object.entries(data).map((value) => {\r\n            const [initials, infos] = value;\r\n            if (initials === props.abbreviation) {\r\n                setAbbreviation(initials);\r\n                setLocation(infos.location || 'sem registro');\r\n                setContinent(infos.continent || 'sem registro');\r\n                setTotal_cases(\r\n                    infos.data.slice(-1)[0].total_cases\r\n                        ? infos.data\r\n                              .slice(-1)[0]\r\n                              .total_cases.toLocaleString('pt-br')\r\n                        : 'sem registro'\r\n                );\r\n                setTotal_deaths(\r\n                    infos.data.slice(-1)[0].total_deaths\r\n                        ? infos.data\r\n                              .slice(-1)[0]\r\n                              .total_deaths.toLocaleString('pt-br')\r\n                        : 'sem registro'\r\n                );\r\n                setTotal_vaccinations(\r\n                    infos.data.slice(-1)[0].total_vaccinations\r\n                        ? infos.data\r\n                              .slice(-1)[0]\r\n                              .total_vaccinations.toLocaleString('pt-br')\r\n                        : 'sem registro'\r\n                );\r\n                setPopulation(\r\n                    infos.data.slice(-1)[0].population\r\n                        ? infos.data\r\n                              .slice(-1)[0]\r\n                              .population.toLocaleString('pt-br')\r\n                        : 'sem registro'\r\n                );\r\n                setPopulation_density(\r\n                    infos.data.slice(-1)[0].population_density\r\n                        ? infos.data\r\n                              .slice(-1)[0]\r\n                              .population_density.toLocaleString('pt-br')\r\n                        : 'sem registro'\r\n                );\r\n                setPeople_vaccinated(\r\n                    infos.data.slice(-1)[0].people_vaccinated\r\n                        ? infos.data\r\n                              .slice(-1)[0]\r\n                              .people_vaccinated.toLocaleString('pt-br')\r\n                        : 'sem registro'\r\n                );\r\n                setPeople_fully_vaccinated(\r\n                    infos.data.slice(-1)[0].people_fully_vaccinated\r\n                        ? infos.data\r\n                              .slice(-1)[0]\r\n                              .people_fully_vaccinated.toLocaleString('pt-br')\r\n                        : 'sem registro'\r\n                );\r\n                setTotal_boosters(\r\n                    infos.data.slice(-1)[0].total_boosters\r\n                        ? infos.data\r\n                              .slice(-1)[0]\r\n                              .total_boosters.toLocaleString('pt-br')\r\n                        : 'sem registro'\r\n                );\r\n                setNew_vaccinations(\r\n                    infos.data.slice(-1)[0].new_vaccinations\r\n                        ? infos.data\r\n                              .slice(-1)[0]\r\n                              .new_vaccinations.toLocaleString('pt-br')\r\n                        : 'sem registro'\r\n                );\r\n                setTotal_tests(\r\n                    infos.data.slice(-1)[0].total_tests\r\n                        ? infos.data\r\n                              .slice(-1)[0]\r\n                              .total_tests.toLocaleString('pt-br')\r\n                        : 'sem registro'\r\n                );\r\n                setNew_tests(\r\n                    infos.data.slice(-1)[0].new_tests\r\n                        ? infos.data\r\n                              .slice(-1)[0]\r\n                              .new_tests.toLocaleString('pt-br')\r\n                        : 'sem registro'\r\n                );\r\n                setReproduction_rate(\r\n                    infos.data.slice(-1)[0].reproduction_rate\r\n                        ? infos.data\r\n                              .slice(-1)[0]\r\n                              .reproduction_rate.toLocaleString('pt-br')\r\n                        : 'sem registro'\r\n                );\r\n                setIcu_patients(\r\n                    infos.data.slice(-1)[0].icu_patients\r\n                        ? infos.data\r\n                              .slice(-1)[0]\r\n                              .icu_patients.toLocaleString('pt-br')\r\n                        : 'sem registro'\r\n                );\r\n                setNew_deaths(\r\n                    infos.data.slice(-1)[0].new_deaths\r\n                        ? infos.data\r\n                              .slice(-1)[0]\r\n                              .new_deaths.toLocaleString('pt-br')\r\n                        : 'sem registro'\r\n                );\r\n                setNew_cases(\r\n                    infos.data.slice(-1)[0].new_cases\r\n                        ? infos.data\r\n                              .slice(-1)[0]\r\n                              .new_cases.toLocaleString('pt-br')\r\n                        : 'sem registro'\r\n                );\r\n            }\r\n\r\n            return initials;\r\n        });\r\n    });\r\n\r\n    return (\r\n        <section className='section-modal'>\r\n            <div className='modal-container'>\r\n                <div className='modal-container-left'>\r\n                    <div className='modal-content-group modal-location'>\r\n                        <div className='modal-content-infos'>\r\n                            <label htmlFor='location'>Localização</label>\r\n                            <p id='location'> {location} </p>\r\n                        </div>\r\n                        <div className='modal-content-infos'>\r\n                            <label htmlFor='continent'>Continente</label>\r\n                            <p id='continent'> {continent} </p>\r\n                        </div>\r\n                        <div className='modal-content-infos'>\r\n                            <label htmlFor='abbreviation'>Sigla</label>{' '}\r\n                            <p id='abbreviation'> {abbreviation} </p>\r\n                        </div>\r\n                    </div>\r\n                    <div className='modal-content-group modal-population'>\r\n                        <div className='modal-content-infos'>\r\n                            <label htmlFor='population'>População</label>\r\n                            <p id='population'> {population} </p>\r\n                        </div>\r\n                        <div className='modal-content-infos'>\r\n                            <label htmlFor='population_density'>\r\n                                Densidade Populacional\r\n                            </label>\r\n                            <p id='population_density'>\r\n                                {' '}\r\n                                {population_density}{' '}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <div className='modal-content-group modal-vaccination'>\r\n                        <div className='modal-content-infos'>\r\n                            <label htmlFor='total_vaccinations'>\r\n                                Total de vacinados\r\n                            </label>\r\n                            <p id='total_vaccinations'>\r\n                                {' '}\r\n                                {total_vaccinations}{' '}\r\n                            </p>\r\n                        </div>\r\n                        <div className='modal-content-infos'>\r\n                            <label htmlFor='new_vaccinations'>\r\n                                Novos vacinados\r\n                            </label>\r\n                            <p id='new_vaccinations'> {new_vaccinations} </p>\r\n                        </div>\r\n                        <div className='modal-content-infos'>\r\n                            <label htmlFor='people_vaccinated'>\r\n                                Primeira dose\r\n                            </label>\r\n                            <p id='people_vaccinated'> {people_vaccinated} </p>\r\n                        </div>\r\n                        <div className='modal-content-infos'>\r\n                            <label htmlFor='people_fully_vaccinated'>\r\n                                Segunda dose ou dose única\r\n                            </label>\r\n                            <p id='people_fully_vaccinated'>\r\n                                {' '}\r\n                                {people_fully_vaccinated}{' '}\r\n                            </p>\r\n                        </div>\r\n                        <div className='modal-content-infos'>\r\n                            <label htmlFor='total_boosters'>\r\n                                Dose de reforço\r\n                            </label>\r\n                            <p id='total_boosters'> {total_boosters} </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='modal-container-right'>\r\n                    <div className='modal-content-group modal-tests'>\r\n                        <div className='modal-content-infos'>\r\n                            <label htmlFor='total_tests'>Total de testes</label>\r\n                            <p id='total_tests'> {total_tests} </p>\r\n                        </div>\r\n                        <div className='modal-content-infos'>\r\n                            <label htmlFor='new_tests'>Novos testes</label>\r\n                            <p id='new_tests'> {new_tests} </p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='modal-unity  modal-content-group modal-content-infos'>\r\n                        <label htmlFor='reproduction_rate'>\r\n                            Taxa de reprodução\r\n                        </label>\r\n                        <p id='reproduction_rate'> {reproduction_rate} </p>\r\n                    </div>\r\n\r\n                    <div className='modal-unity modal-content-group modal-content-infos '>\r\n                        <label htmlFor='icu_patients'>Pacientes em UTI</label>\r\n                        <p id='icu_patients'> {icu_patients} </p>\r\n                    </div>\r\n\r\n                    <div className='modal-content-group modal-deaths'>\r\n                        <div className='modal-content-infos'>\r\n                            <label htmlFor='total_deaths'>\r\n                                Total de mortos\r\n                            </label>\r\n                            <p id='total_deaths'> {total_deaths} </p>\r\n                        </div>\r\n                        <div className='modal-content-infos'>\r\n                            <label htmlFor='new_deaths'>Novos mortos</label>\r\n                            <p id='new_deaths'> {new_deaths} </p>\r\n                        </div>\r\n                    </div>\r\n                    <div className='modal-content-group modal-cases'>\r\n                        <div className='modal-content-infos'>\r\n                            <label htmlFor='total_cases'>Total de casos</label>\r\n                            <p id='total_cases'> {total_cases} </p>\r\n                        </div>\r\n                        <div className='modal-content-infos'>\r\n                            <label htmlFor='new_cases'>Novos casos</label>\r\n                            <p id='new_cases'> {new_cases} </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <button className='modal-button' onClick={() => setIsModal(false)}>\r\n                VOLTAR\r\n            </button>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport { Modal };\r\n","import { useContext, useState } from 'react';\r\nimport { ApiContext } from '../../context/api.context';\r\nimport './index.css';\r\n\r\nconst Search = () => {\r\n    const { loading } = useContext(ApiContext);;\r\n    const [search, setSearch] = useState('');\r\n\r\n    if (!loading) {\r\n        const cards = document.querySelectorAll('.card-body');\r\n        if (cards.length > 0) {\r\n            Object.values(cards).map((card) => {\r\n                const title = card.querySelector('.card-title')?.textContent;\r\n                const initials =\r\n                    card.querySelector('.abbreviation')?.textContent;\r\n                let express = new RegExp(search, 'i');\r\n                if (title && initials) {\r\n                    if (express.test(title) || express.test(initials)) {\r\n                        card.classList.remove('none');\r\n                    } else {\r\n                        card.classList.add('none');\r\n                    }\r\n                }\r\n                return card;\r\n            });\r\n        } else {\r\n            Object.values(cards).map((card) => {\r\n                card.classList.remove('none');\r\n                return card;\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <input\r\n            type='text'\r\n            className='search-country'\r\n            id='search-country'\r\n            value={search}\r\n            onChange={(e) => {\r\n                setSearch(e.target.value);\r\n            }}\r\n            placeholder='Busque por um país'\r\n        />\r\n    );\r\n};\r\n\r\nexport { Search };\r\n","import { useContext } from 'react';\r\nimport { Footer } from '../../components/footer';\r\nimport { Header } from '../../components/header';\r\nimport { Main } from '../../components/main';\r\nimport { Modal } from '../../components/modal';\r\nimport { Search } from '../../components/search';\r\nimport { ModalContext } from '../../context/modal.context';\r\n\r\nconst Home = () => {\r\n    const {isAbbr ,isModal } = useContext(ModalContext);\r\n    return (\r\n        <>\r\n            {isModal ? (\r\n                <>\r\n                    <Header />\r\n                    <Modal abbreviation={isAbbr} />\r\n                    <Footer />\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <Header />\r\n                    <Search />\r\n                    <Main />\r\n                    <Footer />\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport { Home };\r\n","import { useContext } from 'react';\nimport { ApiProvider } from './context/api.context';\nimport { ModalContext, ModalProvider } from './context/modal.context';\nimport { Home } from './views/home';\n\nfunction App() {\n    useContext(ModalContext)\n    return (\n            <ApiProvider>\n                <ModalProvider>\n                    <Home />\n                </ModalProvider>\n            </ApiProvider>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}